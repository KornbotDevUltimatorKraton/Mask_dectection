# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mask.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from img1 import Ui_MainWindow2
import cv2, imutils, socket
import pickle,json 
from google_speech import* 
import numpy as np
import time
import base64
#for itertools import count
sox_effects = ('speed',"1.14")
BUFF_SIZE = 65536
client_socket = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
client_socket.setsockopt(socket.SOL_SOCKET,socket.SO_RCVBUF,BUFF_SIZE)
host_name = socket.gethostname()
host_ip = '192.168.0.40'#  socket.gethostbyname(host_name)
print(host_ip)
port = 9800
message = b'Hello'

client_socket.sendto(message,(host_ip,port))
fps,st,frames_to_count,cnt = (0,0,20,0)
sock_local = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
address_local = "127.0.0.1" 
def wbcm():
    

    face_mask = cv2.CascadeClassifier('mask.xml')

    #cap = cv2.VideoCapture(0)

    #while cap.isOpened():
    while True:  
        #_, img = cap.read()
        #img1 = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        packet,_ = client_socket.recvfrom(BUFF_SIZE)
        data = base64.b64decode(packet,' /')
        npdata = np.fromstring(data,dtype=np.uint8)
        img1 = cv2.imdecode(npdata,1)
        img1 = cv2.putText(img1,'FPS: '+str(fps),(10,40),cv2.FONT_HERSHEY_SIMPLEX,0.7,(0,0,255),2)
        
        gray = cv2.resize(img1,(240,300))
        face = face_mask.detectMultiScale(gray,1.1,4)
        if len(face)==0:
            cv2.putText(img1, 'Without Mask',(20,200), cv2.FONT_HERSHEY_SIMPLEX,1,(0, 0, 255),2)
            message = "off".encode() 
            sock_local.sendto(message,(address_local,4050)) # Getting the local address service 
            #speech = Speech("การุณารบกวนท่านผู้มีเกียรติใส่หน้ากากก่อนเข้าร่วมพิธีด้วยค่ะ",'th')
            #speech.play(sox_effects)
               
        for(x,y,w,h) in face:
            cv2.rectangle(img1,(x,y),(x+w,y+h),(255,0,0),2)
            roi_gray = gray[y:y+h, x:x+w]
            roi_color=img1[y:y+h, x:x+w]
            font = cv2.FONT_HERSHEY_SIMPLEX
            cv2.putText(img1, 'Using Mask',(55,280), font,1,(0,255,0),2)
            message = "on".encode() 
            sock_local.sendto(message,(address_local,4050)) # Getting the local address service 
             
            #speech = Speech("ยินดีต้อนรับเข้าสู่งานค่ะ",'th')
            #speech.play(sox_effects)
        font = cv2.FONT_HERSHEY_SIMPLEX
        
        #cv2.putText(img1, 'press Q to Escape',(10,50),cv2.FONT_HERSHEY_SIMPLEX,1,(209, 80, 0, 255),3) 
        cv2.imshow('test',img1)
        
        if cv2.waitKey(1) & 0xFF ==ord('q'):
            break
 
    cap.release()
    cv2.destroyAllWindows()
class Ui_MainWindow(object):
    def goImg(self):
        self.mainwindow=QtWidgets.QMainWindow()
        self.second=Ui_MainWindow2()
        self.second.setupUi(self.mainwindow)
        self.mainwindow.show()
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(170, 220, 381, 71))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.goImg)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(170, 320, 381, 81))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(80, 30, 621, 161))
        font = QtGui.QFont()
        self.pushButton_2.clicked.connect(self.on_click)
        font.setFamily("Palatino Linotype")
        font.setPointSize(48)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAutoFillBackground(False)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    def on_click(self):
        wbcm()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Mask Detecter"))
        self.pushButton.setText(_translate("MainWindow", "USING IMAGES"))
        self.pushButton_2.setText(_translate("MainWindow", "USE WEBCAM"))
        self.label.setText(_translate("MainWindow", "MASK DETECTER"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
